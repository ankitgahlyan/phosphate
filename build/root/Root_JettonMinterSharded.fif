// automatically generated from `@stdlib/std/stdlib.fc` `/home/zeta/connected/ton/fossfiatContract/build/root/Root_JettonMinterSharded.fc` 
PROGRAM{
  DECLPROC __tact_store_address_opt
  DECLPROC __tact_not_null
  DECLPROC __tact_context_get
  DECLPROC __tact_context_get_sender
  DECLPROC __tact_dict_set_code
  DECLPROC __tact_dict_get_code
  DECLPROC __tact_dict_set_slice_uint
  DECLPROC $JettonTransferInternal$_store
  DECLPROC $JettonTransferInternal$_store_cell
  DECLPROC $JettonTransferInternal$_load
  DECLPROC $JettonTransferInternal$_load_bounced
  DECLPROC $JettonExcesses$_store
  DECLPROC $JettonExcesses$_store_cell
  DECLPROC $Upgrade$_store
  DECLPROC $Upgrade$_store_cell
  DECLPROC $JettonMinterSharded$_store
  DECLPROC $JettonMinterSharded$_load
  DECLPROC $StdAddress$_get_workchain
  DECLPROC $JettonMinterState$_to_external
  DECLPROC $JettonMinterSharded$_to_external
  DECLPROC $JettonWalletSharded$init$_store
  DECLPROC $JettonMinterSharded$init$_load
  DECLPROC $JettonWalletSharded$_code_child
  DECLPROC $JettonMinterSharded$_contract_init
  DECLPROC $JettonMinterSharded$_contract_load
  DECLPROC $JettonMinterSharded$_contract_store
  DECLPROC $BasechainAddress$_constructor_hash
  DECLPROC $global_emptyBasechainAddress
  DECLPROC $Builder$_fun_storeBasechainAddress
  DECLPROC $global_makeTakeWalletAddressMsg
  DECLPROC $global_changeShard
  DECLPROC $Builder$_fun_asSlice
  DECLPROC $Builder$_fun_storeShardedStateInit
  DECLPROC $Slice$_fun_asCell
  DECLPROC $Address$_fun_getShard
  DECLPROC $MessageParameters$_fun_send
  DECLPROC $ShardDeployParameters$_constructor_shard_deployParameters
  DECLPROC $DeployParameters$_fun_toShard
  DECLPROC $ShardDeployParameters$_fun_send
  DECLPROC $JettonWalletSharded$_init_child
  DECLPROC $DeployParameters$_constructor_value_mode_body_init
  DECLPROC $Upgrade$_constructor_sender_walletVersion_newWalletCode
  DECLPROC $StateInit$_constructor_code_data
  DECLPROC $MessageParameters$_constructor_to_mode_bounce_value_body
  DECLPROC $JettonMinterSharded$_fun_sendUpgrade
  DECLPROC $JettonMinterSharded$_fun_state
  DECLPROC $JettonMinterState$_constructor_totalSupply_mintable_adminAddress_jettonContent_jettonWalletCode
  DECLPROC $JettonMinterSharded$_fun_get_jetton_data
  DECLPROC $JettonMinterSharded$_fun_getWalletInit
  DECLPROC $JettonMinterSharded$_fun_getJettonWalletInit
  DECLPROC $JettonMinterSharded$_fun_getJettonWalletByOwner
  DECLPROC $JettonMinterSharded$_fun_get_wallet_address
  DECLPROC $JettonMinterSharded$_fun_getJettonBasechainWalletByOwner
  DECLPROC $MessageParameters$_constructor_body_to_value_mode
  DECLPROC $MessageParameters$_constructor_to_body_value_bounce_mode
  DECLPROC $JettonExcesses$_constructor_queryId
  DECLPROC $MessageParameters$_constructor_to_value_mode
  77589 DECLMETHOD %state
  106029 DECLMETHOD %get_jetton_data
  103289 DECLMETHOD %get_wallet_address
  DECLPROC recv_internal
  DECLGLOBVAR __tact_context
  DECLGLOBVAR __tact_context_sender
  DECLGLOBVAR __tact_child_contract_codes
  DECLGLOBVAR __tact_randomized
  __tact_store_address_opt PROCINLINE:<{
    DUP
    ISNULL
    IF:<{
      DROP
      b{00} STSLICECONST
    }>ELSE<{
      SWAP
      STSLICE
    }>
  }>
  __tact_not_null PROCINLINE:<{
    DUP
    ISNULL
    128 THROWIF
  }>
  __tact_context_get PROCINLINE:<{
    __tact_context GETGLOB
    4 UNTUPLE
  }>
  __tact_context_get_sender PROCINLINE:<{
    __tact_context_sender GETGLOB
  }>
  __tact_dict_set_code PROCINLINE:<{
    s0 s2 XCHG
    16 PUSHINT
    DICTUSETREF
  }>
  __tact_dict_get_code PROCINLINE:<{
    SWAP
    16 PUSHINT
    DICTUGETREF
    NULLSWAPIFNOT
    135 THROWIFNOT
  }>
  __tact_dict_set_slice_uint PROCINLINE:<{
    OVER
    ISNULL
    IF:<{
      2DROP
      -ROT
          DICTDEL
      DROP
    }>ELSE<{
      NEWC
      SWAP
      STUX
      s1 s3 s3 XCHG3
      DICTSETB
    }>
  }>
  $JettonTransferInternal$_store PROCINLINE:<{
    395134233 PUSHINT
    s0 s8 XCHG2
    32 STU
    s1 s6 XCHG
    64 STU
    s1 s4 XCHG
    10 STU
    ROT
    STVARUINT16
    STSLICE
    SWAP
    __tact_store_address_opt INLINECALLDICT
    SWAP
    STVARUINT16
    STSLICE
  }>
  $JettonTransferInternal$_store_cell PROCINLINE:<{
    7 -ROLL
    $JettonTransferInternal$_store INLINECALLDICT
    ENDC
  }>
  $JettonTransferInternal$_load PROCINLINE:<{
    32 LDU
    SWAP
    395134233 PUSHINT
    EQUAL
    129 THROWIFNOT
    64 LDU
    10 LDU
    LDVARUINT16
    LDMSGADDR
                b{00} SDBEGINSQ
                IF:<{
                  PUSHNULL
                }>ELSE<{
                  LDMSGADDR
                  SWAP
                }>
    SWAP
    LDVARUINT16
    s6 s6 XCPU
    s1 s6 XCHG
    s1 s5 XCHG
    s1 s4 XCHG
    s3 s3 s0 XCHG3
  }>
  $JettonTransferInternal$_load_bounced PROCINLINE:<{
    64 LDU
    10 LDU
    LDVARUINT16
    3 -ROLL
  }>
  $JettonExcesses$_store PROCINLINE:<{
    3576854235 PUSHINT
    ROT
    32 STU
    64 STU
  }>
  $JettonExcesses$_store_cell PROCINLINE:<{
    SWAP
    $JettonExcesses$_store INLINECALLDICT
    ENDC
  }>
  $Upgrade$_store PROCINLINE:<{
    621336170 PUSHINT
    s0 s8 XCHG2
    32 STU
    s6 PUSH
    ISNULL
    NOT
    IF:<{
      TRUE
      SWAP
      1 STI
      s1 s6 XCHG
      10 STU
    }>ELSE<{
      s6 POP
      FALSE
      s0 s6 XCHG2
      1 STI
    }>
    s4 PUSH
    ISNULL
    NOT
    IF:<{
      TRUE
      SWAP
      1 STI
      s1 s4 XCHG
      10 STU
    }>ELSE<{
      s4 POP
      FALSE
      s0 s4 XCHG2
      1 STI
    }>
    ROT
    __tact_store_address_opt INLINECALLDICT
    STOPTREF
    STOPTREF
    SWAP
    NEWC
    STOPTREF
    s1 s2 XCHG
    STOPTREF
    STBREFR
  }>
  $Upgrade$_store_cell PROCINLINE:<{
    7 -ROLL
    $Upgrade$_store INLINECALLDICT
    ENDC
  }>
  $JettonMinterSharded$_store PROCINLINE:<{
    s1 16 s() XCHG
    s0 s15 XCHG
    STVARUINT16
    s1 s13 XCHG
    32 STU
    s0 s11 XCHG2
    STVARUINT16
    s0 s9 XCHG2
    STVARUINT16
    s1 s7 XCHG
    STSLICE
    s1 s5 XCHG
    STREF
    s0 s3 XCHG
    NEWC
    STREF
    s1 s2 XCHG
    STREF
    1 STI
    s1 s2 XCHG
    10 STU
    s1 s2 XCHG
    10 STU
    s0 s2 XCHG
    NEWC
    STSLICE
    s1 s2 XCHG
    STBREFR
    ROT
    STVARUINT16
    s0 s2 XCHG
    NEWC
    STDICT
    s1 s4 XCHG
    STDICT
    s1 s2 XCHG
    STDICT
    STBREFR
    STBREFR
  }>
  $JettonMinterSharded$_load PROCINLINE:<{
    LDVARUINT16
    32 LDU
    LDVARUINT16
    LDVARUINT16
    LDMSGADDR
    LDREF
    LDREF
    SWAP
    CTOS
    LDREF
    LDREF
    1 LDI
    10 LDU
    10 LDU
    LDREF
    SWAP
    CTOS
    SWAP
    LDVARUINT16
    LDREF
    DROP
    CTOS
    LDDICT
    LDDICT
    LDDICT
    DROP
    s10 16 s() XCHG
    s10 s15 XCHG
    s10 s14 XCHG
    s10 s13 XCHG
    s10 s12 XCHG
    s10 s11 XCHG
  }>
  $StdAddress$_get_workchain PROCINLINE:<{
    DROP
  }>
  $JettonMinterState$_to_external PROCINLINE:<{
  }>
  $JettonMinterSharded$_to_external PROCINLINE:<{
  }>
  $JettonWalletSharded$init$_store PROCINLINE:<{
    s2 s3 XCHG2
    STSLICE
    STSLICE
    SWAP
    STVARUINT16
  }>
  $JettonMinterSharded$init$_load PROCINLINE:<{
    LDVARUINT16
    LDMSGADDR
    LDREF
    3 -ROLL
  }>
  $JettonWalletSharded$_code_child PROCINLINE:<{
    __tact_child_contract_codes GETGLOB
    CTOS
    LDDICT
    DROP
    27052 PUSHINT
    __tact_dict_get_code INLINECALLDICT
  }>
  $JettonMinterSharded$_contract_init PROCINLINE:<{
    0 PUSHINT
    s0 s0 PUSH2
    TRUE
    s1 s1 PUSH2
        B{b5ee9c724101010100020000004cacb9cd} B>boc <s PUSHSLICE
    1000000000000 PUSHINT
    PUSHNULL
    PUSHNULL
    PUSHNULL
    $JettonWalletSharded$_code_child INLINECALLDICT
    $JettonWalletSharded$_code_child INLINECALLDICT
    s12 s14 XCHG
    s11 s13 XCHG
    s10 s12 XCHG
    s10 s11 XCHG
    8 2 BLKSWAP
  }>
  $JettonMinterSharded$_contract_load PROCINLINE:<{
    c4 PUSH
    CTOS
    LDREF
    SWAP
    __tact_child_contract_codes SETGLOB
    1 LDI
    SWAP
    IF:<{
      $JettonMinterSharded$_load INLINECALLDICT
      16 s() POP
      15 ROLL
    }>ELSE<{
      $JettonMinterSharded$init$_load INLINECALLDICT
      s0 s3 XCHG
      ENDS
      ROT
      $JettonMinterSharded$_contract_init INLINECALLDICT
    }>
  }>
  $JettonMinterSharded$_contract_store PROCINLINE:<{
    NEWC
    __tact_child_contract_codes GETGLOB
    SWAP
    STREF
    TRUE
    SWAP
    1 STI
    s0 16 s() XCHG
    15 -ROLL
    $JettonMinterSharded$_store INLINECALLDICT
    ENDC
    c4 POP
  }>
  $BasechainAddress$_constructor_hash PROCINLINE:<{
  }>
  $global_emptyBasechainAddress PROCINLINE:<{
    PUSHNULL
    $BasechainAddress$_constructor_hash INLINECALLDICT
  }>
  $Builder$_fun_storeBasechainAddress PROCINLINE:<{
    DUP
    ISNULL
    IF:<{
      DROP
      0 PUSHINT
      SWAP
      2 STU
    }>ELSE<{
      10 PUSHPOW2
      ROT
      11 STU
      SWAP
      __tact_not_null INLINECALLDICT
      SWAP
      256 STU
    }>
  }>
  $global_makeTakeWalletAddressMsg PROCINLINE:<{
    IF:<{
          NEWC
      SWAP
          STSLICER
          ENDC
    }>ELSE<{
      DROP
      PUSHNULL
    }>
        NEWC
    3513996288 PUSHINT
    SWAP
    32 STU
    s1 s2 XCHG
    64 STU
    ROT
    $Builder$_fun_storeBasechainAddress INLINECALLDICT
        STOPTREF
        ENDC
  }>
  $global_changeShard PROCINLINE:<{
    SWAP
    248 PUSHINT
        MODPOW2
    SWAP
    248 LSHIFT#
    OR
  }>
  $Builder$_fun_asSlice PROCINLINE:<{
        ENDC
        CTOS
  }>
  $Builder$_fun_storeShardedStateInit PROCINLINE:<{
    40 PUSHINT
    s0 s3 XCHG2
    6 STU
    6 PUSHINT
    SWAP
    4 STU
        STREF
        STREF
  }>
  $Slice$_fun_asCell PROCINLINE:<{
        NEWC
    SWAP
        STSLICER
        ENDC
  }>
  $Address$_fun_getShard PROCINLINE:<{
    11 PUSHINT
        SDSKIPFIRST
    8 LDU
    DROP
  }>
  $MessageParameters$_fun_send PROCINLINE:<{
        NEWC
        b{01} STSLICECONST  // store tag = $0 and ihr_disabled = true
        1 STI               // store `bounce`
        b{000} STSLICECONST // store bounced = false and src = addr_none
        STSLICE             // store `to`
        SWAP
        STGRAMS             // store `value`
        106 PUSHINT         // 1 + 4 + 4 + 64 + 32 + 1
        STZEROES
        // → Stack state
        // s0: Builder
        // s1: `body`
        // s2: `mode`
        STDICT
        ENDC
        SWAP
        SENDRAWMSG
  }>
  $ShardDeployParameters$_constructor_shard_deployParameters PROCINLINE:<{
    6 ROLL
  }>
  $DeployParameters$_fun_toShard PROCINLINE:<{
    6 -ROLL
    $ShardDeployParameters$_constructor_shard_deployParameters INLINECALLDICT
  }>
  $ShardDeployParameters$_fun_send PROCINLINE:<{
        NEWC
    2SWAP
    $Builder$_fun_storeShardedStateInit INLINECALLDICT
        ENDC
        NEWC
    1 PUSHINT
    SWAP
    2 STU
    s1 s3 XCHG
        1 STI
    10 PUSHPOW2
    SWAP
    14 STU
    s2 PUSH
        HASHCU
    ROT
    $global_changeShard INLINECALLDICT
    SWAP
    256 STU
    ROT
        STVARUINT16
    3 PUSHINT
    SWAP
    107 STU
        STREF
        STOPTREF
        ENDC
    SWAP
        SENDRAWMSG
  }>
  $JettonWalletSharded$_init_child PROCINLINE:<{
    __tact_child_contract_codes GETGLOB
    CTOS
    LDDICT
    DROP
    DUP
    27052 PUSHINT
    __tact_dict_get_code INLINECALLDICT
    NEWDICT
    s0 s2 XCHG
    2598 PUSHINT
    __tact_dict_get_code INLINECALLDICT
    s1 s2 XCHG
    2598 PUSHINT
    SWAP
    __tact_dict_set_code INLINECALLDICT
    NEWC
    SWAP
    NEWC
    STDICT
    STBREFR
    FALSE
    SWAP
    1 STI
    3 2 BLKSWAP
    $JettonWalletSharded$init$_store INLINECALLDICT
    ENDC
  }>
  $DeployParameters$_constructor_value_mode_body_init PROCINLINE:<{
    s3 s4 XCHG
    s2 s3 XCHG
    TRUE
    -ROT
  }>
  $Upgrade$_constructor_sender_walletVersion_newWalletCode PROCINLINE:<{
    PUSHNULL
    PUSHNULL
    s0 s4 XCHG2
    PUSHNULL
    s0 s3 XCHG2
    PUSHNULL
    SWAP
  }>
  $StateInit$_constructor_code_data PROCINLINE:<{
  }>
  $MessageParameters$_constructor_to_mode_bounce_value_body PROCINLINE:<{
    s0 s3 XCHG
    s1 s4 s4 XCHG3
  }>
  $JettonMinterSharded$_fun_sendUpgrade PROCINLINE:<{
    66 PUSHINT
    FALSE
    0 PUSHINT
    s15 s9 s13 PUSH3
    $Upgrade$_constructor_sender_walletVersion_newWalletCode INLINECALLDICT
    NEWC
    $Upgrade$_store_cell INLINECALLDICT
    $MessageParameters$_constructor_to_mode_bounce_value_body INLINECALLDICT
    $MessageParameters$_fun_send INLINECALLDICT
  }>
  $JettonMinterSharded$_fun_state PROCINLINE:<{
    s15 s14 s13 PUSH3
    s15 s14 s13 PUSH3
    s15 s14 s13 PUSH3
    s15 s14 s13 PUSH3
    s15 s14 s13 PUSH3
    s15 PUSH
  }>
  $JettonMinterState$_constructor_totalSupply_mintable_adminAddress_jettonContent_jettonWalletCode PROCINLINE:<{
  }>
  $JettonMinterSharded$_fun_get_jetton_data PROCINLINE:<{
    s15 s7 s11 PUSH3
    s13 s12 PUSH2
    $JettonMinterState$_constructor_totalSupply_mintable_adminAddress_jettonContent_jettonWalletCode INLINECALLDICT
  }>
  $JettonMinterSharded$_fun_getWalletInit PROCINLINE:<{
        MYADDR
    0 PUSHINT
    $JettonWalletSharded$_init_child INLINECALLDICT
    NIP
    s9 s(-1) PUXC
    $StateInit$_constructor_code_data INLINECALLDICT
  }>
  $JettonMinterSharded$_fun_getJettonWalletInit PROCINLINE:<{
    $JettonMinterSharded$_fun_getWalletInit INLINECALLDICT
        NEWC
    -ROT
    $Builder$_fun_storeShardedStateInit INLINECALLDICT
        ENDC
  }>
  $JettonMinterSharded$_fun_getJettonWalletByOwner PROCINLINE:<{
    s15 16 s() XCHG
    s14 16 s() XCHG
    s13 16 s() XCHG
    s12 16 s() XCHG
    s11 16 s() XCHG
    s10 16 s() XCHG
    s9 16 s() XCHG
    s0 16 s() XCHG
    s0 s8 XCHG
    s0 s7 XCHG
    s0 s6 XCHG
    5 -ROLL
    16 s() PUSH
    $JettonMinterSharded$_fun_getJettonWalletInit INLINECALLDICT
    s0 17 s() XCHG
    $Address$_fun_getShard INLINECALLDICT
        NEWC
    4 PUSHINT
    SWAP
    3 STU
    0 PUSHINT
    SWAP
    8 STU
    s0 18 s() XCHG
        HASHCU
    SWAP
    $global_changeShard INLINECALLDICT
    SWAP
    s0 17 s() XCHG
    256 STU
    $Builder$_fun_asSlice INLINECALLDICT
        LDMSGADDR
    DROP
    s15 16 s() XCHG
    s14 s15 XCHG
    s13 s14 XCHG
    s12 s13 XCHG
    s11 s12 XCHG
    s10 s11 XCHG
    s9 s10 XCHG
    s8 s9 XCHG
    s7 s8 XCHG
    s6 s7 XCHG
    s5 s6 XCHG
    s4 s5 XCHG
    s3 s4 XCHG
    s1 s3 s0 XCHG3
  }>
  $JettonMinterSharded$_fun_get_wallet_address PROCINLINE:<{
    $JettonMinterSharded$_fun_getJettonWalletByOwner INLINECALLDICT
  }>
  $JettonMinterSharded$_fun_getJettonBasechainWalletByOwner PROCINLINE:<{
    s15 16 s() XCHG
    s14 16 s() XCHG
    s13 16 s() XCHG
    s12 16 s() XCHG
    s11 16 s() XCHG
    s10 16 s() XCHG
    s9 16 s() XCHG
    s0 16 s() XCHG
    s0 s8 XCHG
    s0 s7 XCHG
    s0 s6 XCHG
    5 -ROLL
    16 s() PUSH
    $JettonMinterSharded$_fun_getJettonWalletInit INLINECALLDICT
    s0 17 s() XCHG
    $Address$_fun_getShard INLINECALLDICT
    s0 17 s() XCHG
        HASHCU
    SWAP
    s0 17 s() XCHG
    $global_changeShard INLINECALLDICT
    $BasechainAddress$_constructor_hash INLINECALLDICT
    s15 16 s() XCHG
    s14 s15 XCHG
    s13 s14 XCHG
    s12 s13 XCHG
    s11 s12 XCHG
    s10 s11 XCHG
    s9 s10 XCHG
    s8 s9 XCHG
    s7 s8 XCHG
    s6 s7 XCHG
    s5 s6 XCHG
    s4 s5 XCHG
    s3 s4 XCHG
    s1 s3 s0 XCHG3
  }>
  $MessageParameters$_constructor_body_to_value_mode PROCINLINE:<{
    s3 s1 s3 XCHG3
    TRUE
  }>
  $MessageParameters$_constructor_to_body_value_bounce_mode PROCINLINE:<{
    s4 s4 XCHG2
  }>
  $JettonExcesses$_constructor_queryId PROCINLINE:<{
  }>
  $MessageParameters$_constructor_to_value_mode PROCINLINE:<{
    PUSHNULL
    s0 s0 s3 XCHG3
    TRUE
  }>
  %state PROC:<{
    $JettonMinterSharded$_contract_load INLINECALLDICT
    $JettonMinterSharded$_fun_state INLINECALLDICT
    16 s() POP
    16 s() POP
    16 s() POP
    16 s() POP
    16 s() POP
    16 s() POP
    16 s() POP
    16 s() POP
    16 s() POP
    16 s() POP
    16 s() POP
    16 s() POP
    16 s() POP
    16 s() POP
    16 s() POP
    16 s() POP
    $JettonMinterSharded$_to_external INLINECALLDICT
  }>
  %get_jetton_data PROC:<{
    $JettonMinterSharded$_contract_load INLINECALLDICT
    $JettonMinterSharded$_fun_get_jetton_data INLINECALLDICT
    10 5 BLKDROP2
    6 5 BLKDROP2
    $JettonMinterState$_to_external INLINECALLDICT
  }>
  %get_wallet_address PROC:<{
    $JettonMinterSharded$_contract_load INLINECALLDICT
    s15 16 s() XCHG
    15 ROLL
    $JettonMinterSharded$_fun_get_wallet_address INLINECALLDICT
    16 s() POP
    15 BLKDROP
  }>
  recv_internal PROC:<{
    SWAP
    CTOS
    2 PUSHINT
    SDSKIPFIRST
    1 LDI
    1 LDI
    LDMSGADDR
    OVER
    s3 s4 XCHG
    s6 s6 XCHG2
    4 TUPLE
    __tact_context SETGLOB
    s0 s2 XCHG
    __tact_context_sender SETGLOB
    $JettonMinterSharded$_contract_load INLINECALLDICT
    s0 17 s() XCHG
    IFJMP:<{
      s0 s15 XCHG
      32 PUSHINT
      SDSKIPFIRST
      0 PUSHINT
      OVER
      SBITS
      31 GTINT
      IF:<{
        DROP
        32 LDU
        SWAP
      }>
      395134233 PUSHINT
      EQUAL
      IFJMP:<{
        $JettonTransferInternal$_load_bounced INLINECALLDICT
        3 1 BLKDROP2
        s1 s14 XCHG
        SUB
        s0 s15 XCHG
        s12 s14 XCHG
        s11 s13 XCHG
        s10 s12 XCHG
        s9 s11 XCHG
        s8 s10 XCHG
        s7 s9 XCHG
        s6 s8 XCHG
        s5 s7 XCHG
        s4 s6 XCHG
        s3 s5 XCHG
        s4 s3 s0 XCHG3
        s1 s2 XCHG
        $JettonMinterSharded$_contract_store INLINECALLDICT
      }>
      15 BLKDROP
      2DROP
    }>
    0 PUSHINT
    16 s() PUSH
    SBITS
    DUP
    31 GTINT
    IF:<{
      NIP
      16 s() PUSH
      32 PLDU
      SWAP
    }>
    OVER
    745978227 PUSHINT
    EQUAL
    IFJMP:<{
      2DROP
      s0 s15 XCHG
      32 PUSHINT
      SDSKIPFIRST
      64 LDU
      LDMSGADDR
      1 LDI
      DROP
      OVER
          REWRITESTDADDR
      $StdAddress$_get_workchain INLINECALLDICT
      s2 PUSH
      $Address$_fun_getShard INLINECALLDICT
      s15 18 s() XCHG
      s14 17 s() XCHG
      s13 16 s() XCHG
      s12 18 s() XCHG
      s11 17 s() XCHG
      s10 16 s() XCHG
      s9 18 s() XCHG
      s8 17 s() XCHG
      s7 16 s() XCHG
      s6 18 s() XCHG
      s5 17 s() XCHG
      s4 16 s() XCHG
      s3 18 s() XCHG
      s2 17 s() XCHG
      s1 19 s() XCHG
      s0 20 s() XCHG
      18 s() PUSH
      $JettonMinterSharded$_fun_getJettonWalletInit INLINECALLDICT
          HASHCU
      s0 20 s() XCHG
      0 EQINT
      IF:<{
        s1 19 s() XCHG
        s0 20 s() XCHG
        $global_changeShard INLINECALLDICT
        $BasechainAddress$_constructor_hash INLINECALLDICT
      }>ELSE<{
        19 s() POP
        19 s() POP
        $global_emptyBasechainAddress INLINECALLDICT
        18 s() 19 s() XCHG
      }>
      s15 s1 s3 XCHG3
      s1 17 s() XCHG
      s0 16 s() XCHG
      $global_makeTakeWalletAddressMsg INLINECALLDICT
      __tact_context_get_sender INLINECALLDICT
      0 PUSHINT
      64 PUSHINT
      $MessageParameters$_constructor_body_to_value_mode INLINECALLDICT
      $MessageParameters$_fun_send INLINECALLDICT
      s10 s15 XCHG
      5 10 BLKSWAP
      s4 s3 s0 XCHG3
      s1 s2 XCHG
      $JettonMinterSharded$_contract_store INLINECALLDICT
    }>
    OVER
    2078119902 PUSHINT
    EQUAL
    IFJMP:<{
      2DROP
      s0 s15 XCHG
      32 PUSHINT
      SDSKIPFIRST
      64 LDU
      LDVARUINT16
      LDMSGADDR
                  b{00} SDBEGINSQ
                  IF:<{
                    PUSHNULL
                  }>ELSE<{
                    LDMSGADDR
                    SWAP
                  }>
      NIP
      __tact_context_get_sender INLINECALLDICT
          REWRITESTDADDR
      16 s() 19 s() XCHG
      s15 18 s() XCHG
      s14 17 s() XCHG
      s13 19 s() XCHG
      s12 18 s() XCHG
      s11 17 s() XCHG
      s10 19 s() XCHG
      s9 18 s() XCHG
      s8 17 s() XCHG
      s7 19 s() XCHG
      s6 18 s() XCHG
      s5 17 s() XCHG
      s4 19 s() XCHG
      s3 18 s() XCHG
      s2 20 s() XCHG
      s1 21 s() XCHG
      s0 18 s() XCHG
      $JettonMinterSharded$_fun_getJettonBasechainWalletByOwner INLINECALLDICT
      s0 21 s() XCHG
      0 EQINT
      IF:<{
        s0 20 s() XCHG
        __tact_not_null INLINECALLDICT
        s1 17 s() XCHG
        EQUAL
      }>ELSE<{
        20 s() POP
        16 s() POP
        FALSE
      }>
      724 THROWIFNOT
      17 s() PUSH
      ISNULL
      NOT
      IF:<{
        s0 16 s() XCHG
        s1 s13 XCHG
        ADD
            BALANCE FIRST
        s0 17 s() XCHG
        __tact_not_null INLINECALLDICT
        s0 s14 XCHG
        $JettonExcesses$_constructor_queryId INLINECALLDICT
        NEWC
        $JettonExcesses$_store_cell INLINECALLDICT
        17 s() PUSH
        5000000000 PUSHINT
        GREATER
        IF:<{
          s0 17 s() XCHG
          1000000000 PUSHINT
          SUB
        }>ELSE<{
          17 s() POP
          0 PUSHINT
        }>
        s2 s14 XCHG
        s1 17 s() XCHG
        FALSE
        66 PUSHINT
        $MessageParameters$_constructor_to_body_value_bounce_mode INLINECALLDICT
        $MessageParameters$_fun_send INLINECALLDICT
      }>ELSE<{
        s14 POP
        16 s() POP
        s11 s14 XCHG2
        SUB
        s0 s14 XCHG
        s11 s13 XCHG
        s0 s10 XCHG
      }>
      s14 s15 XCHG
      s9 s14 XCHG
      s8 s13 XCHG
      s7 s12 XCHG
      s6 s11 XCHG
      s5 s10 XCHG
      s4 s9 XCHG
      s3 s8 XCHG
      s7 s1 s5 XCHG3
      3 -ROLL
      s0 s6 XCHG
      s0 s4 XCHG
      $JettonMinterSharded$_contract_store INLINECALLDICT
    }>
    OVER
    1680571655 PUSHINT
    EQUAL
    IFJMP:<{
      2DROP
      s0 s15 XCHG
      32 PUSHINT
      SDSKIPFIRST
      64 LDU
      NIP
      LDMSGADDR
      LDREF
      DROP
      CTOS
      $JettonTransferInternal$_load INLINECALLDICT
      s7 POP
      __tact_context_get_sender INLINECALLDICT
      18 s() PUSH
      SDEQ
      700 THROWIFNOT
      s0 s13 XCHG
      730 THROWIFNOT
      s6 PUSH
          REWRITESTDADDR
      $StdAddress$_get_workchain INLINECALLDICT
      0 EQINT
      734 THROWIFNOT
      s5 PUSH
          LDDICT // Throws 9 if Either bit = 1 and ref is not present
          SWAP
          ISNULL
          <{
              DROP
          }> PUSHCONT
          <{
              ENDS // Also throws 9 if slice is not empty
          }> PUSHCONT
          IFELSE
      __tact_context_get INLINECALLDICT
      10000000 PUSHINT
      17 s() PUSH
      ADD
      s4 s3 s0 XCHG3
      s4 s3 PUXC
          LDMSGADDR   // load dest:MsgAddressInt
          LDGRAMS     // load value:CurrencyCollection
          ONE
          SDSKIPFIRST // skip extra currency collection
          LDGRAMS     // load ihr_fee
          LDGRAMS     // load fwd_fee, we'll be using this!
          DROP        // drop remaining Slice (with created_lt and created_at)
          // There are 7 entries on the stack — first 3 fields of Context plus 4 loaded ones.
          // The topmost is fwd_fee, which is the only one we're after, so let's drop 6 entries below:
          6 1 BLKDROP2 // drop the loaded values as well as the first 3 fields of Context
          ZERO              // not masterchain
          GETORIGINALFWDFEE // floor(fwd_fee * 2^16 / (2^16 - first_frac)), where
                            // first_frac is a value listed in config param 25
                            // of the blockchain: https://tonviewer.com/config#25
                            // this instruction effectively multiplies the fwd_fee by 1.5,
                            // at least for the current value of first_frac, which is 21845
      ADD
      300 PUSHINT
      250000 PUSHINT
      FALSE
          GETFORWARDFEE
      ADD
      11050 PUSHINT
      FALSE
          GETGASFEE
      1 LSHIFT#
      ADD
      GREATER
      703 THROWIFNOT
      s0 20 s() XCHG
      s2 PUSH
      ADD
      s0 19 s() XCHG
      INC
      s0 s4 XCHG
      s3 s1 s3 XCHG3
      FALSE
      s0 21 s() XCHG
      s1 s2 XCHG
      0 PUSHINT
      80 PUSHINT
      s15 s8 XCHG2
      NEWC
      $JettonTransferInternal$_store_cell INLINECALLDICT
      s15 16 s() XCHG
      s1 s14 XCHG
      s13 16 s() XCHG
      s1 s12 XCHG
      s11 16 s() XCHG
      s1 s10 XCHG
      s9 16 s() XCHG
      s1 s8 XCHG
      s7 17 s() XCHG
      s1 s6 XCHG
      s5 17 s() XCHG
      s1 s4 XCHG
      s3 17 s() XCHG
      s1 s2 XCHG
      s1 18 s() XCHG
      s0 19 s() XCHG
      17 s() PUSH
      $JettonMinterSharded$_fun_getWalletInit INLINECALLDICT
      s4 18 s() XCHG
      s3 20 s() XCHG
      s2 21 s() XCHG
      $DeployParameters$_constructor_value_mode_body_init INLINECALLDICT
      s0 20 s() XCHG
      $Address$_fun_getShard INLINECALLDICT
      s5 s6 XCHG
      s4 s5 XCHG
      s3 s4 XCHG
      s1 s3 s0 XCHG3
      s1 20 s() XCHG
      $DeployParameters$_fun_toShard INLINECALLDICT
      $ShardDeployParameters$_fun_send INLINECALLDICT
      s11 s15 XCHG
      s10 s14 XCHG
      s9 s13 XCHG
      s8 s12 XCHG
      s7 s11 XCHG
      s6 s10 XCHG
      s5 s9 XCHG
      s4 s8 XCHG
      s3 s7 XCHG
      s6 s1 s4 XCHG3
      s0 s0 s5 XCHG3
      s0 s3 XCHG
      $JettonMinterSharded$_contract_store INLINECALLDICT
    }>
    OVER
    60010958 PUSHINT
    EQUAL
    IFJMP:<{
      2DROP
      s0 s15 XCHG
      32 PUSHINT
      SDSKIPFIRST
      LDMSGADDR
      DROP
      __tact_context_get_sender INLINECALLDICT
      s11 PUSH
      SDEQ
      700 THROWIFNOT
      10000000 PUSHINT
      16 PUSHINT
          RAWRESERVE
      0 PUSHINT
      7 PUSHPOW2
      $MessageParameters$_constructor_to_value_mode INLINECALLDICT
      $MessageParameters$_fun_send INLINECALLDICT
      s13 s15 XCHG
      2 13 BLKSWAP
      $JettonMinterSharded$_contract_store INLINECALLDICT
    }>
    OVER
    4 EQINT
    IFJMP:<{
      2DROP
      s5 POP
      s8 POP
      s0 s13 XCHG
      32 PUSHINT
      SDSKIPFIRST
      64 LDU
      NIP
      LDREF
      DROP
      __tact_context_get_sender INLINECALLDICT
      s9 PUSH
      SDEQ
      700 THROWIFNOT
      1 PUSHINT
      __tact_context_get_sender INLINECALLDICT
          NEWC
          x{42_} STSLICECONST // .storeUint(0x10, 6)
          STSLICE          // .storeAddress(to)
          0 PUSHINT        // 0
          111 STUR         // .storeUint(0, 111)
                           // 4 zeros for coins and 107 zeros for lt, fees, etc.
          ENDC
          66 PUSHINT       // SendRemainingValue | SendIgnoreErrors
          SENDRAWMSG
      s13 s15 XCHG
      s12 s14 XCHG
      s11 s13 XCHG
      s10 s12 XCHG
      s9 s11 XCHG
      s1 s10 XCHG
      s7 s9 XCHG
      s6 s8 XCHG
      s5 s7 XCHG
      s0 s6 XCHG
      s3 s5 XCHG
      2 3 BLKSWAP
      $JettonMinterSharded$_contract_store INLINECALLDICT
    }>
    OVER
    56 EQINT
    IFJMP:<{
      2DROP
      s0 s15 XCHG
      32 PUSHINT
      SDSKIPFIRST
      10 LDU
      DROP
      s4 PUSH
      LESS
      IF:<{
        __tact_context_get_sender INLINECALLDICT
        s14 16 s() XCHG
        s13 s15 XCHG
        s12 s14 XCHG
        s11 s13 XCHG
        s10 s12 XCHG
        s9 s11 XCHG
        s8 s10 XCHG
        s7 s9 XCHG
        s6 s8 XCHG
        s5 s7 XCHG
        s4 s6 XCHG
        s3 s5 XCHG
        s4 s3 s0 XCHG3
        s1 s2 XCHG
        $JettonMinterSharded$_fun_sendUpgrade INLINECALLDICT
        s0 s15 XCHG
        13 2 BLKSWAP
      }>
      s13 s15 XCHG
      2 13 BLKSWAP
      $JettonMinterSharded$_contract_store INLINECALLDICT
    }>
    OVER
    3 EQINT
    IFJMP:<{
      2DROP
      s0 s15 XCHG
      32 PUSHINT
      SDSKIPFIRST
      64 LDU
      NIP
      LDMSGADDR
      DROP
      __tact_context_get_sender INLINECALLDICT
      s0 s11 XCHG2
      SDEQ
      700 THROWIFNOT
      __tact_context_get_sender INLINECALLDICT
          NEWC
          x{42_} STSLICECONST // .storeUint(0x10, 6)
          STSLICE          // .storeAddress(to)
          0 PUSHINT        // 0
          111 STUR         // .storeUint(0, 111)
                           // 4 zeros for coins and 107 zeros for lt, fees, etc.
          ENDC
          66 PUSHINT       // SendRemainingValue | SendIgnoreErrors
          SENDRAWMSG
      s13 s15 XCHG
      2 13 BLKSWAP
      $JettonMinterSharded$_contract_store INLINECALLDICT
    }>
    OVER
    68 EQINT
    IFJMP:<{
      2DROP
      s0 s15 XCHG
      32 PUSHINT
      SDSKIPFIRST
      1 LDI
      DROP
      IF:<{
        s0 s12 XCHG
        INC
      }>ELSE<{
        s0 s12 XCHG
        DEC
      }>
      s13 s15 XCHG
      s0 s14 XCHG
      s11 s13 XCHG
      s10 s12 XCHG
      s9 s11 XCHG
      s8 s10 XCHG
      s7 s9 XCHG
      s6 s8 XCHG
      s5 s7 XCHG
      s4 s6 XCHG
      s3 s5 XCHG
      s4 s0 s3 XCHG3
      $JettonMinterSharded$_contract_store INLINECALLDICT
    }>
    OVER
    70 EQINT
    IFJMP:<{
      2DROP
      s0 s15 XCHG
      32 PUSHINT
      SDSKIPFIRST
      LDVARUINT16
      DROP
      s1 s14 XCHG
      ADD
      s0 s15 XCHG
      s12 s14 XCHG
      s11 s13 XCHG
      s10 s12 XCHG
      s9 s11 XCHG
      s8 s10 XCHG
      s7 s9 XCHG
      s6 s8 XCHG
      s5 s7 XCHG
      s4 s6 XCHG
      s3 s5 XCHG
      s4 s3 s0 XCHG3
      s1 s2 XCHG
      $JettonMinterSharded$_contract_store INLINECALLDICT
    }>
    OVER
    65 EQINT
    IFJMP:<{
      2DROP
      s0 s15 XCHG
      32 PUSHINT
      SDSKIPFIRST
      LDMSGADDR
      LDVARUINT16
      DROP
      s1 s2 XCHG
      267 PUSHINT
      s3 s1 PUXC
      10 PUSHINT
      __tact_dict_set_slice_uint INLINECALLDICT
      SWAP
          NEWC
          x{42_} STSLICECONST // .storeUint(0x10, 6)
          STSLICE          // .storeAddress(to)
          0 PUSHINT        // 0
          111 STUR         // .storeUint(0, 111)
                           // 4 zeros for coins and 107 zeros for lt, fees, etc.
          ENDC
          66 PUSHINT       // SendRemainingValue | SendIgnoreErrors
          SENDRAWMSG
      s13 s15 XCHG
      2 13 BLKSWAP
      $JettonMinterSharded$_contract_store INLINECALLDICT
    }>
    OVER
    66 EQINT
    IFJMP:<{
      2DROP
      s0 s15 XCHG
      32 PUSHINT
      SDSKIPFIRST
      LDMSGADDR
      LDMSGADDR
      LDVARUINT16
      DROP
      s2 17 s() XCHG
      267 PUSHINT
      -ROT
      20 PUSHINT
      __tact_dict_set_slice_uint INLINECALLDICT
      s0 s15 XCHG
          NEWC
          x{42_} STSLICECONST // .storeUint(0x10, 6)
          STSLICE          // .storeAddress(to)
          0 PUSHINT        // 0
          111 STUR         // .storeUint(0, 111)
                           // 4 zeros for coins and 107 zeros for lt, fees, etc.
          ENDC
          66 PUSHINT       // SendRemainingValue | SendIgnoreErrors
          SENDRAWMSG
      s13 s15 XCHG
      2 13 BLKSWAP
      $JettonMinterSharded$_contract_store INLINECALLDICT
    }>
    OVER
    3414567170 PUSHINT
    EQUAL
    IFJMP:<{
      2DROP
      s9 POP
      s0 s14 XCHG
      32 PUSHINT
      SDSKIPFIRST
      64 LDU
      NIP
      __tact_context_get_sender INLINECALLDICT
      s10 PUSH
      SDEQ
      700 THROWIFNOT
      $Slice$_fun_asCell INLINECALLDICT
      s13 s15 XCHG
      s12 s14 XCHG
      s11 s13 XCHG
      s10 s12 XCHG
      s9 s11 XCHG
      s0 s10 XCHG
      s7 s9 XCHG
      2 7 BLKSWAP
      $JettonMinterSharded$_contract_store INLINECALLDICT
    }>
    OVER
    621336170 PUSHINT
    EQUAL
    IFJMP:<{
      2DROP
      s0 s15 XCHG
      32 PUSHINT
      SDSKIPFIRST
      1 LDI
      SWAP
      IF:<{
        10 LDU
        NIP
      }>ELSE<{
      }>
      1 LDI
      SWAP
      IF:<{
        10 LDU
        NIP
      }>ELSE<{
      }>
                  b{00} SDBEGINSQ
                  IF:<{
                    PUSHNULL
                  }>ELSE<{
                    LDMSGADDR
                    SWAP
                  }>
      DROP
      LDOPTREF
      LDOPTREF
      LDREF
      DROP
      CTOS
      LDOPTREF
      NIP
      LDOPTREF
      DROP
      __tact_context_get_sender INLINECALLDICT
      s13 PUSH
      SDEQ
      700 THROWIFNOT
      OVER
      ISNULL
      NOT
      IF:<{
        s0 s7 XCHG
        INC
        SWAP
        __tact_not_null INLINECALLDICT
            SETCODE
        s0 s6 XCHG
      }>ELSE<{
        NIP
      }>
      DUP
      ISNULL
      NOT
      IF:<{
        s9 POP
        s0 s4 XCHG
        INC
        s0 s8 XCHG
        __tact_not_null INLINECALLDICT
        s14 s13 s12 PUSH3
        s14 s13 s12 PUSH3
        s6 s13 s12 PUSH3
        s14 PUSH
        18 s() PUSH
        s14 s13 s12 PUSH3
        29 s() PUSH
        31 s() PUSH
        s15 30 s() XCHG
        s14 29 s() XCHG
        s13 28 s() XCHG
        s12 27 s() XCHG
        26 s() PUSH
        s0 s12 XCHG
        s11 26 s() XCHG
        s10 17 s() XCHG
        s9 24 s() XCHG
        s8 23 s() XCHG
        s7 22 s() XCHG
        s6 25 s() XCHG
        s5 20 s() XCHG
        s4 19 s() XCHG
        s3 18 s() XCHG
        s2 32 s() XCHG
        s1 33 s() XCHG
        s0 27 s() XCHG
        $JettonMinterSharded$_fun_getJettonWalletByOwner INLINECALLDICT
        16 s() POP
        15 BLKDROP
        s15 16 s() XCHG
        s14 s15 XCHG
        s13 s14 XCHG
        s12 s13 XCHG
        s11 s12 XCHG
        s1 s10 XCHG
        s1 s11 XCHG
        s8 s9 XCHG
        s7 s8 XCHG
        s6 s7 XCHG
        s4 s5 XCHG
        s3 s4 XCHG
        s1 s3 s0 XCHG3
        s1 17 s() XCHG
        $JettonMinterSharded$_fun_sendUpgrade INLINECALLDICT
        s0 16 s() XCHG
        s1 s15 XCHG
        s1 s14 XCHG
        s1 s13 XCHG
        s1 s12 XCHG
        s1 s11 XCHG
        s1 s10 XCHG
        s1 s9 XCHG
        s1 s8 XCHG
        s1 s7 XCHG
        s1 s6 XCHG
        s1 s5 XCHG
        s1 s4 XCHG
        s3 s3 s0 XCHG3
      }>ELSE<{
        DROP
      }>
      DUP
      ISNULL
      NOT
      IF:<{
        __tact_not_null INLINECALLDICT
            c4 POP
        0 THROW
      }>ELSE<{
        DROP
      }>
      s13 s15 XCHG
      2 13 BLKSWAP
      $JettonMinterSharded$_contract_store INLINECALLDICT
    }>
    17 s() POP
    0 EQINT
    s0 16 s() XCHG
    33 LESSINT
    s1 16 s() XCHG
    AND
    IFJMP:<{
      s13 s15 XCHG
      2 13 BLKSWAP
      $JettonMinterSharded$_contract_store INLINECALLDICT
    }>
    s13 s15 XCHG
    2 13 BLKSWAP
    $JettonMinterSharded$_contract_store INLINECALLDICT
  }>
}END>c
